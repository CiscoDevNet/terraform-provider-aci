# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# template for the changelog footer
header = """
# Terraform Provider ACI - Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
# TODO find a nicer way to remove the [something] tags from the start of commits.
body = """
{% if version %}\
    ## {{ version | trim_start_matches(pat="v") }} ({{ timestamp | date(format="%B %d, %Y") }})
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    {{ group | striptags | trim | upper_first }}:
    {% for commit in commits -%}
        - {{ commit.message | trim 
        | trim_start_matches(pat="[bugfix]") 
        | trim_start_matches(pat="[bug_fix]") 
        | trim_start_matches(pat="[bugfixes]") 
        | trim_start_matches(pat="[minor_change]") 
        | trim_start_matches(pat="[minor_changes]") 
        | trim_start_matches(pat="[major_change]") 
        | trim_start_matches(pat="[major_changes]") 
        | trim | capitalize }}
    {% endfor -%}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  { pattern = '.*', replace_command = 'typos --write-changes -' }
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^.[I|i]gnore", skip = true },
  { message = "[D|d]eprecat", group = "<!-- 0 -->DEPRECATIONS" },
  { message = "^.[B|b]ug", group = "<!-- 1 -->BUG FIXES" },
  { message = "^.[M|m]inor", group = "<!-- 3 -->IMPROVEMENTS" },
  { message = "^.[M|m]ajor", group = "<!-- 3 -->IMPROVEMENTS" },
#  { message = ".*", group = "<!-- 5 -->OTHER" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# regex for matching git tags
# tag_pattern = "v[0-9].*"
# regex for skipping tags
# skip_tags = ""
# regex for ignoring tags
# ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# limit the number of commits included in the changelog.
# limit_commits = 42
