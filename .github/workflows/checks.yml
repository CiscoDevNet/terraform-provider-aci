name: CI

on:
  push:
    branches: [master]
  pull_request:

permissions:
  # Permission for checking out code
  contents: read

jobs:
  build:
    name: Check & Build Provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: chmod +x ./scripts/gofmtcheck.sh
      - name: gofmt Check
        run: ./scripts/gofmtcheck.sh
      - run: go mod tidy
      - run: go mod vendor
      - name: Check vendor for changes
        run: git diff --exit-code
      - name: Build
        run: go build -v

  diff:
    name: Check Generated Code Difference
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Generate provider code
        run: go generate
      - name: Check generated code for diffs
        run: git diff --exit-code

  acceptance:
    name: Acceptance Tests
    if: github.repository_owner == 'CiscoDevNet'
    needs: [build, diff]
    runs-on: ubuntu-latest
    env:
      ACI_USERNAME: 'ansible_github_ci'
      ACI_PASSWORD: 'sJ94G92#8dq2hx*K4qh'
    concurrency:
        group: tf-aci-ci-test-${{ matrix.apic_host.name }}
        cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        apic_host:
          # - name: v4.2
          #   url: 'https://173.36.219.68/'
          - name: v5.2
            url: 'https://173.36.219.69/'
          - name: v6.0
            url: 'https://173.36.219.70/'
          # - name: aws_cloud
          #   url: 'https://52.52.20.121/'
          # - name: azure_cloud
          #   url: 'https://20.245.236.136/'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.*'
          terraform_wrapper: false
      - name: Terraform Acceptance Test (APIC ${{ matrix.apic_host.name }})
        run: go test github.com/CiscoDevNet/terraform-provider-aci/v2/internal/provider -v -timeout 300m -coverprofile=coverage.out -covermode=atomic
        env:
          TF_ACC: '1'
          TF_ACC_STATE_LINEAGE: '1'
          ACI_VAL_REL_DN: false
          ACI_URL: ${{ matrix.apic_host.url }}
      - name: Upload coverage to Codecov
        # Upload Coverage on latest only
        if: ${{ matrix.apic_host.name == 'v6.0'}}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}