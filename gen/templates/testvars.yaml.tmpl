# Code generated by "gen/generator.go"; DO NOT EDIT.
# In order to regenerate this file execute `go generate` from the repository root.
# More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

default:
  {{- range .Properties}}{{$overwritePropertyName := overwriteProperty .PkgName .SnakeCaseName $.Definitions}}
    {{- if .DefaultValue}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName .DefaultValue "default" 0 $.Definitions}}"
    {{- else if not .IsNaming}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName "" "default" 0 $.Definitions}}"
    {{- end}}
  {{- end}}

datasource_non_existing:
  {{- range .Properties}}{{$testValue := createNonExistingValue .SnakeCaseName}}{{$overwritePropertyName := overwriteProperty .PkgName .SnakeCaseName $.Definitions}}
    {{- if eq .SnakeCaseName "t_dn" }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: {{overwritePropertyValue .PkgName $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}
    {{- else  if or .IsNaming }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName $testValue "datasource_non_existing" 0 $.Definitions}}"
    {{- end}}
  {{- end}}

datasource_required:
  {{- range .Properties}}{{$testValue := createTestValue .SnakeCaseName}}{{$overwritePropertyName := overwriteProperty .PkgName .SnakeCaseName $.Definitions}}
    {{- if eq .SnakeCaseName "t_dn" }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: {{overwritePropertyValue .PkgName $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}
    {{- else if or .IsNaming }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName $testValue "datasource_required" 0 $.Definitions}}"
    {{- end}}
  {{- end}}

resource_required:
  {{- range .Properties}}{{$testValue := createTestValue .SnakeCaseName}}{{$overwritePropertyName := overwriteProperty .PkgName .SnakeCaseName $.Definitions}}
    {{- if eq .SnakeCaseName "t_dn" }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: {{overwritePropertyValue .PkgName $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}
    {{- else if or .IsNaming .IsRequired}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}"
    {{- end}}
  {{- end}}

all:
  {{- range .Properties}}{{$overwritePropertyName := overwriteProperty .PkgName .SnakeCaseName $.Definitions}}
    {{- if overwriteProperty .PkgName .SnakeCaseName $.Definitions | eq "annotation"}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "annotation"
    {{- else if .DefaultValue}}{{$length := len .ValidValues}}
      {{- if eq $length 0}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName .DefaultValue "all" 0 $.Definitions}}"
      {{- else }}{{$testValue := index .ValidValues 0 }}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName $testValue "all" 0 $.Definitions}}"
      {{- end}}
    {{- else if not .IsNaming}}
  {{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue .PkgName $overwritePropertyName $overwritePropertyName "all" 0 $.Definitions}}"{{- end}}
    {{- end}}
{{ if .Children}}
children:
  {{- range $key, $value := .Children}}{{$name := .ResourceName}}
  {{.ResourceName}}:
    - {{ range .Properties}}{{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: {{$length := len .ValidValues}}{{if ne $length 0}}"{{ index .ValidValues 0 }}"{{else if not .IsNaming}}"{{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}_1"{{- else}}"{{lookupChildTestValue .PkgName $.ResourceName .SnakeCaseName $.TestVars 0 $.Definitions}}"{{- end}}
      {{ end}}
    - {{ range .Properties}}{{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}: {{$length := len .ValidValues}}{{if ge $length 2}}"{{ index .ValidValues 1 }}"{{else if not .IsNaming}}"{{overwriteProperty .PkgName .SnakeCaseName $.Definitions}}_2"{{- else}}"{{lookupChildTestValue .PkgName $.ResourceName .SnakeCaseName $.TestVars 1 $.Definitions}}"{{- end}}
      {{ end}}{{- end}}{{- end}}
{{- if .ContainedBy}}
parents:
    {{- $index := 0}}{{- range $key := .DocumentationExamples}}{{$parentDependency := getParentTestDependencies $.PkgName $index $.Definitions}}
  - class_name: "{{ $key }}"
    parent_dependency: "{{$parentDependency.parent_dependency}}"
    parent_dn: "{{createParentDnValue $key "test" $.Definitions}}"
    class_in_parent: {{$parentDependency.class_in_parent}}{{$index = add $index 1}}
    {{- end}}

targets:
  {{- $index := 0}}{{- $key := .TargetResourceClassName}}
    {{- if ne $key "" }}
      {{- $targetDependency := getTargetTestDependencies $.PkgName $index $.Definitions}}
  - class_name: "{{ $key }}"
          {{- if ne $targetDependency.target_dn "" }}
    target_dn: "{{ $targetDependency.target_dn }}"
          {{- else }} 
    target_dn: "{{ .TargetDn }}"
          {{- end }}
    parent_dn: "{{createParentDnValue $key "test" $.Definitions}}"
    parent_dependency: "{{$targetDependency.parent_dependency}}"
    parent_dependency_dn: "{{$targetDependency.parent_dependency_dn}}"
    resource_required:
        {{- range $.TargetProperties}}{{$testValue := createTestValue .SnakeCaseName}}{{$overwritePropertyName := overwriteProperty $key .SnakeCaseName $.Definitions}}
          {{- if eq .SnakeCaseName "t_dn" }}
      {{overwriteProperty $key .SnakeCaseName $.Definitions}}: {{overwritePropertyValue $key $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}
          {{- else if or .IsNaming .IsRequired}}
      {{overwriteProperty $key .SnakeCaseName $.Definitions}}: "{{overwritePropertyValue $key $overwritePropertyName $testValue "resource_required" 0 $.Definitions}}"
          {{- end}}
        {{- end}}
    grandparent_class_name: "{{$targetDependency.grandparent_class_name}}"{{$index = add $index 1}}
    {{- end }}
  {{- end}}
