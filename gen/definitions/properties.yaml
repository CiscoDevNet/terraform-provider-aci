global:
  documentation:
    # %s will be replaced with the object name
    annotation: "The annotation of the %s object."
    name: "The name of the %s object."
    nameAlias: "The name alias of the %s object."
    descr: "The description of the %s object."
    owner: "The owner of the %s object."
    mac: "The MAC address of the %s object."
    bdName: "The bridge domain name of the %s object."
    ctxName: "The VRF name of the %s object."
    id: "The identifier of the %s object."
    tnVzOOBBrCPName: "The name of the Out Of Band Contract object."
    tnRtctrlProfileName: "The name of the Route Control Profile object."
    prio: "The Quality of Service (QoS) priority class ID. QoS refers to the capability of a network to provide better service to selected network traffic over various technologies. The primary goal of QoS is to provide priority including dedicated bandwidth, controlled jitter and latency (required by some real-time and interactive traffic), and improved loss characteristics. You can configure the bandwidth of each QoS level using QoS profiles."
    matchT: "The provider label match criteria."
    instrImedcy: "The deployment immediacy of the %s object. Specifies when the policy is pushed into the hardware policy content-addressable memory (CAM)"
    resImedcy: "The resolution immediacy of the %s object. Specifies if policies are resolved immmediately or when needed."
  overwrites:
    count: "apic_count" # count is a terraform reserved schema entry
    provider: "prov" # provider is a terraform reserved schema entry
    t_dn: "target_dn"
    ctx_name: "vrf_name"
    id: "id_attribute" # id is a terraform reserved schema entry and needed in struct
    prio: "priority"
    match_t: "match_criteria"
    descr: "description"
    encap: "encapsulation"
    encap_mode: "encapsulation_mode"
    primary_encap: "primary_encapsulation"
    primary_encap_inner: "primary_encapsulation_inner"
    secondary_encap_inner: "secondary_encapsulation_inner"
    instr_imedcy: "deployment_immediacy"
    res_imedcy: "resolution_immediacy"
    netflow_dir: "netflow_direction"
    netflow_pref: "enable_netflow"
    num_ports: "number_of_ports"
    class_pref: "class_preference"
  resource_name_doc_overwrite:
    Vrf: VRF
    Sid: "SR-MPLS Segment ID"
    Epg: "EPG"
    Useg: "uSeg"
    Vm: "VM"
    Dns: "DNS"
    Mac: "MAC"
    Ip: "IP"
    Ad: "AD"
    Esg: "ESG"
  ignores:
    - "userdom"

l3extRsRedistributePol:
  overwrites:
    src: "source"
  documentation:
    src: "The source of the %s object."
  test_values:
    resource_required:
      source: "direct"
    datasource_required:
      source: "direct"
    datasource_non_existing:
      source: "static"
    all:
      source: "direct"
    default:
      source: "direct"
  parents:
    - parent_dependency: "fvTenant"
      class_in_parent: true # required to be set to true because l3ext is a legacy resource that has this class as configuration which results in non-empty state on refresh

vzOOBBrCP:
  documentation:
    targetDscp: "The target DSCP value of the %s object."
    intent: "The Install Rules or Estimate Number of Rules"

mgmtSubnet:
  test_values:
    resource_required:
      ip: "1.1.1.0/24"
    datasource_required:
      ip: "1.1.1.0/24"
    datasource_non_existing:
      ip: "2.2.2.0/24"

l3extConsLbl:
  test_values:
    default:
      tag: "yellow-green"
    all:
      tag: "lemon-chiffon"

pimRouteMapEntry:
  overwrites:
    grp: "group_ip"
    src: "source_ip"
    rp: "rendezvous_point_ip"
  documentation:
    src: "The source ip of the %s object."
    grp: "The group ip of the %s object."
    rp: "The rendezvous point ip of the %s object."
    action: "The route action of the %s object."
  test_values:
    default:
      group_ip: "0.0.0.0"
      rendezvous_point_ip: "0.0.0.0"
      source_ip: "0.0.0.0"
    resource_required:
      order: "1"
    datasource_required:
      order: "1"
    datasource_non_existing:
      order: "2"
    all:
      group_ip: "0.0.0.0"
      rendezvous_point_ip: "0.0.0.0"
      source_ip: "1.1.1.1/30"
  parents:
    - parent_dependency: "fvTenant"

fvEpMacTag:
  test_values:
    default:
      mac: "00:00:00:00:00:00"
      id_attribute: "0"
    resource_required:
      mac: "00:00:00:00:00:01"
    datasource_required:
      mac: "00:00:00:00:00:01"
    all:
      id_attribute: "1"
    datasource_non_existing:
      mac: "00:00:00:00:00:01"
  ignores:
    - "ctxName"

fvEpIpTag:
  test_values:
    default:
      ip: "10.0.0.1"
      id_attribute: "0"
    resource_required:
      ip: "10.0.0.2"
    datasource_required:
      ip: "10.0.0.2"
    all:
      id_attribute: "1"
      ip: "10.0.0.2"
    datasource_non_existing:
      ip: "10.0.1.2"
  documentation:
    ip: "The IP address of the %s object."

tagAnnotation:
  documentation:
    key: "The key used to uniquely identify this configuration object."
  resource_required:
    - "value"
  test_values:
    default:
      value: "test_value"

tagTag:
  documentation:
    key: "The key used to uniquely identify this configuration object."
  resource_required:
    - "value"
  test_values:
    default:
      value: "test_value"
  parents:
    - class_name: "fvAEPg"
      parent_dependency: ""
      parent_dn: "aci_application_epg.test.id"
    - class_name: "fvTenant"
      parent_dependency: ""
      parent_dn: "aci_tenant.test.id"

fvFBRGroup:
  test_values:
    default:
      name: "fallback_route_group"
    resource_required:
      name: "fallback_route_group"
    datasource_required:
      name: "fallback_route_group"
    datasource_non_existing:
      name: "fallback_route_group_non_existing"
  parents:
    - class_name: "fvCtx"
      parent_dependency: "fvTenant"
      parent_dn: "aci_vrf.test.id"

fvFBRMember:
  overwrites:
    rnh_addr: "fallback_member"
  documentation:
    rnhAddr: "The address of the %s object."
  test_values:
    default:
      fallback_member: "2.2.2.2"
    resource_required:
      fallback_member: "2.2.2.3"
    datasource_required:
      fallback_member: "2.2.2.3"
    datasource_non_existing:
      fallback_member: "2.2.2.4"
    test_values_for_parent:
      - fallback_member: "2.2.2.2"
      - fallback_member: "2.2.2.3"
  parents:
    - class_name: "fvFBRGroup"
      parent_dependency: "fvCtx"
      parent_dn: "aci_vrf_fallback_route_group.test.id"

fvFBRoute:
  overwrites:
    fbr_prefix: "prefix_address"
  documentation:
    fbrPrefix: "The prefix address of the %s object."
  test_values:
    default:
      prefix_address: "2.2.2.2/24"
    resource_required:
      prefix_address: "2.2.2.3/24"
    datasource_required:
      prefix_address: "2.2.2.3/24"
    datasource_non_existing:
      prefix_address: "2.2.2.4/24"
    test_values_for_parent:
      - prefix_address: "2.2.2.2/24"
  parents:
    - class_name: "fvFBRGroup"
      parent_dependency: "fvCtx"
      parent_dn: "aci_vrf_fallback_route_group.test.id"

l3extRsOutToFBRGroup:
  documentation:
    tDn: "The distinguished name of the VRF Fallback Route Group object."
  parents:
    - class_name: "l3extOut"
      parent_dependency: "fvTenant"
      parent_dn: "aci_l3_outside.test.id"
      target_classes:
        - "fvFBRGroup"
  targets:
    - class_name: "fvFBRGroup"
      parent_dependency: "fvCtx"
      target_dn: "uni/tn-test_tenant/ctx-test_vrf/fbrg-vrf_fallback_route_group_0"
      relation_resource_name: "vrf_fallback_route_group"
      properties:
        name: "vrf_fallback_route_group_0"

l3extProvLbl:
  test_values:
    default:
      name: "default_prov_label"
      tag: "yellow-green"
    all:
      name: "prov_label"
      tag: "alice-blue"
    resource_required:
      name: "prov_label"
    datasource_required:
      name: "prov_label"
    datasource_non_existing:
      name: "prov_label_non_existing"
  parents:
    - class_name: "l3extOut"
      parent_dependency: "fvTenant"
      parent_dependency_name: "infra"
      parent_dn: "aci_l3_outside.test.id"

netflowMonitorPol:
  default_values:
    parent_dn: "uni/infra"
  test_values:
    default:
      name: "netfow_monitor_default"
    resource_required:
      name: "netfow_monitor"
    datasource_required:
      name: "netfow_monitor"
    datasource_non_existing:
      name: "netfow_monitor_non_existing"
  parents:
    - class_name: "infraInfra"
      parent_dependency: ""
      parent_dn: "uni/infra"
    - class_name: "fvTenant"
      parent_dependency: ""
      parent_dn: "aci_tenant.test.id"

netflowRsMonitorToExporter:
  parents:
    - class_name: "netflowMonitorPol"
      parent_dependency: "fvTenant"
      parent_dn: "aci_netlfow_monitor_policy.test.id"

mplsNodeSidP:
  overwrites:
    loopback_addr: "loopback_address"
    sidoffset: "segment_id"
  documentation:
    loopbackAddr: "The loopback address of the %s object."
    sidoffset: "The segment ID of the %s object."
  test_values:
    default:
      segment_id: "1"
      loopback_address: "0.0.0.0"
      name: ""
    all:
      loopback_address: "1.1.1.1"
      segment_id: "1"
      name: "node_sid_profile"
    resource_required:
      segment_id: "1"
      name: "node_sid_profile"
      loopback_address: "1.1.1.1"
    datasource_required:
      segment_id: "1"
    datasource_non_existing:
      segment_id: "2"
  parents:
    - class_name: "l3extLoopBackIfP"
      parent_dependency: "l3extRsNodeL3OutAtt"
      parent_dn: "aci_logical_node_to_fabric_node.test.id"

netflowRecordPol:
  overwrites:
    match: "match_parameters"
    collect: "collect_parameters"
  documentation:
    match: "Match parameters of the %s object."
    collect: "Collect parameters of the %s object."
  default_values:
    parent_dn: "uni/infra"
  remove_valid_values:
    match:
      - "unspecified"
  test_values:
    default:
      match_parameters: []
      collect_parameters:
        - "src-intf"
    all:
      collect_parameters:
        - "count-bytes"
        - "src-intf"
      match_parameters:
        - "dst-ip"
        - "src-ip"
    resource_required:
      name: "netfow_record"
    datasource_required:
      name: "netfow_record"
    datasource_non_existing:
      name: "netfow_record_non_existing"
  parents:
    - class_name: "infraInfra"
      parent_dependency: ""
      parent_dn: "uni/infra"
    - class_name: "fvTenant"
      parent_dependency: ""
      parent_dn: "aci_tenant.test.id"

fvESg:
  read_only_properties:
    - "pcTag"
  remove_valid_values:
    pcTag:
      - "any"
  default_values:
    shutdown: "no"
  overwrites:
    pref_gr_memb: "preferred_group_member"
    pc_enf_pref: "intra_esg_isolation"
    shutdown: "admin_state"
  documentation:
    prefGrMemb: "Parameter used to determine whether the ESG is part of the preferred group. Members of this group are allowed to communicate without contracts."
    pcEnfPref: "Parameter used to determine whether communication between endpoints within the ESG is blocked."
    shutdown: "Withdraw the ESG configuration from all nodes in the fabric."
  parents:
    - class_name: "fvAp"
      parent_dependency: "fvTenant"
  exclude_targets:
    - "fvAEPg"
  ignores:
    - "floodOnEncap"
    - "prio"

fvRsScope:
  documentation:
    tnFvCtxName: "The name of the VRF object."
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsCons:
  ignores:
    - "intent"
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsProv:
  ignores:
    - "intent"
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsConsIf:
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsProtBy:
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsIntraEpg:
  documentation:
    tnVzBrCPName: "The contract name"
  ignores:
    - "intent"
  parents:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"

fvRsSecInherited:
  parents:
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      target_classes:
        - "fvAEPg"
    - class_name: "fvESg"
      parent_dependency: "fvAp"
      target_classes:
        - "fvESg"
  targets:
    - class_name: "fvESg"
      parent_dependency: "fvAp"
      overwrite_parent_dn_key: "application_profile_dn"
      target_dn: "uni/tn-test_tenant/ap-test_ap/esg-esg_0"
      relation_resource_name: "contract_master"
      properties:
        name: "esg_0"
    - class_name: "fvESg"
      parent_dependency: "fvAp"
      overwrite_parent_dn_key: "application_profile_dn"
      target_dn: "uni/tn-test_tenant/ap-test_ap/esg-esg_1"
      relation_resource_name: "contract_master"
      properties:
        name: "esg_1"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      overwrite_parent_dn_key: "application_profile_dn"
      target_dn: "uni/tn-test_tenant/ap-test_ap/epg-epg_2"
      relation_resource_name: "contract_master"
      properties:
        name: "epg_2"
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      overwrite_parent_dn_key: "application_profile_dn"
      target_dn: "uni/tn-test_tenant/ap-test_ap/epg-epg_3"
      relation_resource_name: "contract_master"
      properties:
        name: "epg_3"

fvCrtrn:
  overwrites:
    prec: "precedence"
  documentation:
    match: "The Matching Rule Type of the %s object."
    prec: "The precedence of the %s object."
    scope: "The scope of the %s object."
  test_values:
    default:
      match: "any"
      precedence: "0"
      scope: "scope-bd"
    all:
      match: "all"
      precedence: "1"
      name: "criterion"
    resource_required:
      name: "criterion"
    datasource_required:
      name: "criterion"
    datasource_non_existing:
      name: "criterion_non_existing"
  parents:
    - class_name: "fvAEPg"
      parent_dn: "aci_application_epg.test.id"

fvSCrtrn:
  documentation:
    match: "The Matching Rule Type of the %s object."
  test_values:
    default:
      match: "any"
    all:
      match: "all"
    resource_required:
      name: "sub_criterion"
    datasource_required:
      name: "sub_criterion"
    datasource_non_existing:
      name: "sub_criterion_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"
    - class_name: "fvSCrtrn"
      parent_dependency: "fvCrtrn"
      parent_dn: "epg_useg_sub_block_statement.test.id"

fvVmAttr:
  resource_required:
    - value
  overwrites:
    labelName: "label_name"
  documentation:
    value: "The value of the %s object."
    type: "The type of the %s object."
    operator: "The operator of the %s object."
    labelName: "The label name of the %s object."
    category: "The category of the %s object."
  test_values:
    default:
      type: "vm-name"
      operator: "equals"
      value: "default_value"
    all:
      type: "domain"
      operator: "contains"
      value: "all_value"
      label_name: "label_name"
      category: "all_category"
    resource_required:
      name: "vm_attribute"
      value: "default_value"
    datasource_required:
      name: "vm_attribute"
    datasource_non_existing:
      name: "vm_attribute_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"
    - class_name: "fvSCrtrn"
      parent_dependency: "fvCrtrn"
      parent_dn: "epg_useg_sub_block_statement.test.id"

fvIdGroupAttr:
  documentation:
    selector: "The selector of the %s object. Represents the DN or expression to select an identity group."
  test_values:
    resource_required:
      selector: "adepg/authsvr-common-sg1-ISE_1/grpcont/dom-cisco.com/grp-Eng"
    datasource_required:
      selector: "adepg/authsvr-common-sg1-ISE_1/grpcont/dom-cisco.com/grp-Eng"
    datasource_non_existing:
      selector: "adepg/authsvr-common-sg1-ISE_1/grpcont/dom-cisco.com/grp-Eng_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"

fvDnsAttr:
  documentation:
    filter: "The domain name filter of the %s object."
  test_values:
    resource_required:
      name: "dns_attribute"
      filter: "test_filter"
    datasource_required:
      name: "dns_attribute"
    datasource_non_existing:
      name: "dns_attribute_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"

fvMacAttr:
  resource_required:
    - mac
  test_values:
    default:
      mac: "AA:BB:CC:DD:EE:FF"
    all:
      mac: "AA:BB:CC:BB:BB:EE"
    resource_required:
      name: "mac_attr"
      mac: "AA:BB:CC:DD:EE:FF"
    datasource_required:
      name: "mac_attr"
    datasource_non_existing:
      name: "mac_attr_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"

fvIpAttr:
  resource_required:
    - ip
  overwrites:
    usefv_subnet: "use_epg_subnet"
  documentation:
    ip: "The device IP address of the %s object."
    usefvSubnet: "Parameter used to determine whether a previously configured subnet address should be used as the IP filter."
  default_values:
    usefvSubnet: "no"
  test_values:
    default:
      use_epg_subnet: "no"
      ip: "131.107.1.200"
      name: "131"
    all:
      use_epg_subnet: "yes"
      ip: "0.0.0.0"
    resource_required:
      name: "131"
      ip: "131.107.1.200"
    datasource_required:
      name: "131"
    datasource_non_existing:
      name: "131_non_existing"
  parents:
    - class_name: "fvCrtrn"
      parent_dependency: "fvAEPg"
      parent_dn: "epg_useg_block_statement.test.id"

fvAEPg:
  read_only_properties:
    - "pcTag"
  remove_valid_values:
    pcTag:
      - "any"
  default_values:
    shutdown: "no"
    hasMcastSource: "no"
    isAttrBasedEPg: "no"
  type_overwrites:
    fwdCtrl: "string"
  overwrites:
    pref_gr_memb: "preferred_group_member"
    pc_enf_pref: "intra_epg_isolation"
    shutdown: "admin_state"
    fwd_ctrl: "forwarding_control"
    has_mcast_source: "has_multicast_source"
    is_attr_based_e_pg: "useg_epg"
    exception_tag: "contract_exception_tag"
    flood_on_encap: "flood_in_encapsulation"
  documentation:
    exceptionTag: "The contract exception tag of the %s object."
    fwdCtrl: "The forwarding control of the %s object."
    floodOnEncap: "Flood L2 Multicast/Broadcast and Link Local Layer based on encapsulation."
    hasMcastSource: "The %s object has a multicast source."
    isAttrBasedEPg: "The %s object is microsegmented (uSeg)."
    pcEnfPref: "Parameter used to determine whether communication between endpoints within the EPG is blocked."
    prefGrMemb: "Parameter used to determine whether the EPG is part of the preferred group. Members of this group are allowed to communicate without contracts."
  test_values:
    default:
      forwarding_control: "none"
    all:
      forwarding_control: "proxy-arp"
  exclude_targets:
    - "fvESg"
  parents:
    - class_name: "fvAp"
      parent_dependency: "fvTenant"

fvRsAEPgMonPol:
  documentation:
    tnMonEPGPolName: "The name of the monitoring policy."

fvRsFcPathAtt:
  default_values:
    vsan: "unknown"
  test_values:
    default:
      vsan: "unknown"
    all:
      vsan: "vsan-10"
    datasource_non_existing:
      target_dn: "topology/pod-2/paths-201/pathep-[eth1/1]"
  documentation:
    vsan: "The virtual storage area network (VSAN) of the %s object."
    vsanMode: "The virtual storage area network (VSAN) mode of the %s object."
  parents:
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      parent_dn: "aci_application_epg.test.id"
      target_classes:
        - "fabricPathEp"
  targets:
    - class_name: "fabricPathEp"
      target_dn: "topology/pod-1/paths-101/pathep-[eth1/1]"
      relation_resource_name: "fibre_channel_path"
      static: true
    - class_name: "fabricPathEp"
      target_dn: "topology/pod-1/paths-101/pathep-[eth1/2]"
      relation_resource_name: "fibre_channel_path"
      static: true

fvRsNodeAtt:
  resource_required:
    - "encapsulation"
  datasource_required:
    - "encapsulation"
  documentation:
    mode: "The static association mode with the path of the %s object."
    encap: "The VLAN encapsulation of the %s object."
  test_values:
    default:
      encapsulation: "vlan-101"
    all:
      encapsulation: "vlan-100"
    resource_required:
      encapsulation: "vlan-101"
    datasource_required:
      encapsulation: "vlan-101"
    datasource_non_existing:
      target_dn: "topology/pod-2/paths-201/pathep-[eth1/1]"
  parents:
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      parent_dn: "aci_application_epg.test.id"
      target_classes:
        - "fabricNode"
  targets:
    - class_name: "fabricNode"
      target_dn: "topology/pod-1/node-101"
      relation_resource_name: "static_leaf"
      static: true
    - class_name: "fabricNode"
      target_dn: "topology/pod-1/node-102"
      relation_resource_name: "static_leaf"
      static: true

fvRsDomAtt:
  default_values:
    untagged: "no"
    vnetOnly: "no"
    ipamEnabled: "no"
  ignores:
    - "apiMode"
  ignore_properties_in_test:
    "ipamDhcpOverride": "10.0.0.2"
    "ipamEnabled": "yes"
    "ipamGateway": "10.0.0.1"
  documentation:
    bindingType: "The binding type of the %s object."
    classPref: "The class preference of the %s object. Set 'useg' to allow microsegmentation."
    delimiter: "The delimiter of the %s object."
    encap: "The encapsulation of the %s object. The encapsulation refers to the EPG VLAN when class preference is set to 'encap, or to the Secondary VLAN when class preference is set to 'useg'."
    encapMode: "The encapsulation mode of the %s object."
    customEpgName: "The display name of the user configured port-group."
    epgCos: "The class of service (CoS) of the %s object."
    epgCosPref: "The class of service (CoS) preference of the %s object."
    ipamEnabled: "The IP address management (IPAM) enabled status of the %s object. Only applicable for Nutanix domains."
    ipamGateway: "The IP address management (IPAM) gateway of the %s object. Only applicable for Nutanix domains."
    ipamDhcpOverride: "The IP address management (IPAM) DHCP override of the %s object. Only applicable for Nutanix domains."
    lagPolicyName: "The link aggregation group (LAG) policy name of the %s object."
    netflowDir: "The NetFlow monitoring direction of the %s object."
    netflowPref: "The Netflow enabled status for the %s object."
    numPorts: "The number of ports of the %s object."
    primaryEncap: "The primary encapsulation of the %s object. This is used when the class preference is set to 'useg'."
    primaryEncapInner: "The primary inner encapsulation of the %s object. This is used for the portgroup at the VMWare Distributed Virtual Switch (DVS). This VLAN is internal to the DVS and is used for communication between the other VMs and the AVE VM at a host. Traffic is not forwarded to the fabric over the VLAN. Only applicable for Cisco ACI Virtual Edge (AVE) domains."
    secondaryEncapInner: "The secondary inner encapsulation of the %s object. This is used for the portgroup at the VMWare Distributed Virtual Switch (DVS). This VLAN is internal to the DVS and is used for communication between the other VMs and the AVE VM at a host. Traffic is not forwarded to the fabric over the VLAN. Only applicable for Cisco ACI Virtual Edge (AVE) domains."
    untagged: "The untagged status of the %s object."
    vnetOnly: "The VNET only status of the %s object."
    switchingMode: "The switching mode of the %s object."
    tDn: "The distinguished name of the target Domain object."
  test_values:
    default:
      encapsulation: "unknown"
      primary_encapsulation: "unknown"
      primary_encapsulation_inner: "unknown"
      secondary_encapsulation_inner: "unknown"
      number_of_ports: "0"
      delimiter: ""
    all:
      encapsulation: "vlan-100"
      primary_encapsulation: "vlan-200"
      primary_encapsulation_inner: "vlan-300"
      secondary_encapsulation_inner: "vlan-400"
      number_of_ports: "1"
      delimiter: "@"
  parents:
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      parent_dn: "aci_application_epg.test.id"
      target_classes:
        - "vmmDomP"
  targets:
    - class_name: "vmmDomP"
      target_dn: "uni/vmmp-VMware/dom-domain_1"
      relation_resource_name: "domain"
      static: true
    - class_name: "vmmDomP"
      target_dn: "uni/vmmp-VMware/dom-domain_2"
      relation_resource_name: "domain"
      static: true

fvRsPathAtt:
  resource_required:
    - "encapsulation"
  datasource_required:
    - "encapsulation"
  test_values:
    default:
      encapsulation: "vlan-201"
      primary_encapsulation: "unknown"
    all:
      encapsulation: "vlan-202"
      primary_encapsulation: "vlan-203"
    resource_required:
      encapsulation: "vlan-201"
    datasource_required:
      encapsulation: "vlan-201"
    datasource_non_existing:
      target_dn: "topology/pod-2/paths-201/pathep-[eth1/1]"
  documentation:
    mode: "The static association mode of the %s object."
    encap: "The VLAN encapsulation of the %s object."
    primaryEncap: "The primary VLAN encapsulation of the %s object."
  parents:
    - class_name: "fvAEPg"
      parent_dependency: "fvAp"
      parent_dn: "aci_application_epg.test.id"
      target_classes:
        - "fabricPathEp"
  targets:
    - class_name: "fabricPathEp"
      target_dn: "topology/pod-1/paths-101/pathep-[eth1/1]"
      relation_resource_name: "static_path"
      static: true
    - class_name: "fabricPathEp"
      target_dn: "topology/pod-1/paths-101/pathep-[eth1/2]"
      relation_resource_name: "static_path"
      static: true

qosCustomPol:
  parents:
    - class_name: "fvTenant"
      parent_dn: "aci_tenant.test.id"

fhsTrustCtrlPol:
  default_values:
    hasDhcpv4Server: "no"
    hasDhcpv6Server: "no"
    hasIpv6Router: "no"
    trustArp: "no"
    trustNd: "no"
    trustRa: "no"
  documentation:
    hasDhcpv4Server: "The %s object contains DHCPv4 servers."
    hasDhcpv6Server: "The %s object contains DHCPv6 servers."
    hasIpv6Router: "The %s object contains IPv6 routers."
    trustArp: "The address resolution protocol (ARP) trust status of the %s object."
    trustNd: "The neighbor discovery (ND) trust status of the %s object."
    trustRa: "The router advertisement (RA) trust status of the %s object."
  parents:
    - class_name: "fvTenant"
      parent_dn: "aci_tenant.test.id"

qosDppPol:
  default_values:
    parent_dn: "uni/infra"
    pir: "0"
    rate: "0"
  documentation:
    rate: "The rate of the %s object."
    rateUnit: "The rate unit of the %s object."
    burst: "The burst size of the %s object."
    burstUnit: "The burst size unit of the %s object."
    pir: "The peak information rate (PIR) of the %s object. Only applicable for 2R3C policer."
    pirUnit: "The peak information rate (PIR) unit of the %s object. Only applicable for 2R3C policer."
    be: "The excessive burst size of the %s object. Only applicable for 2R3C policer."
    beUnit: "The excessive burst size unit of the %s object. Only applicable for 2R3C policer."
    conformAction: "The conform action of the %s object."
    exceedAction: "The exceed action of the %s object."
    violateAction: "The violate action of the %s object."
    conformMarkCos: "The conform mark class of service (CoS) of the %s object."
    exceedMarkCos: "The exceed mark class of service (CoS) of the %s object."
    violateMarkCos: "The violate mark class of service (CoS) of the %s object."
    conformMarkDscp: "The conform mark differentiated services code point (DSCP) of the %s object."
    exceedMarkDscp: "The exceed mark differentiated services code point (DSCP) of the %s object."
    violateMarkDscp: "The violate mark differentiated services code point (DSCP) of the %s object."
    adminSt: "The administrative state of the %s object."
    sharingMode: "The sharing mode of the %s object."
    type: "The type of the %s object."
  overwrites:
    be: "excessive_burst"
    be_unit: "excessive_burst_unit"
    pir: "peak_rate"
    pir_unit: "peak_rate_unit"
    admin_st: "admin_state"
  parents:
    - class_name: "fvTenant"
      parent_dn: "aci_tenant.test.id"

rtctrlProfile:
  default_values:
    autoContinue: "no"
  overwrites:
    type: "route_control_profile_type"
    auto_continue: "route_map_continue"
  documentation:
    autoContinue: "The route_map_continue applies a continue statement for all user-configured sequences (contexts) in a given BGP route profile so that switches will continue to find matches with subsequent user-configured sequences in the route map. Without the continue statement, after a route matches one of the sequences in a route map, switches will not continue to check other sequences."
    type: "The type of the %s object. Use combinable when pervasive subnets (fvSubnet) and external subnets (l3extSubnet) should be combined with a route profile and merged into a single route map or route map entry. Use global when the route profile is the only source of information to generate a route map, this will overwrite other policy attributes."

infraHPathS:
  default_values:
    parent_dn: "uni/infra"
  test_values:
    default:
      name: "host_path_selector_default"
    resource_required:
      name: "host_path_selector"
    datasource_required:
      name: "host_path_selector"
    datasource_non_existing:
      name: "host_path_selector_non_existing"
  parents:
    - class_name: "infraInfra"
      parent_dependency: ""
      parent_dn: "uni/infra"

infraRsHPathAtt:
  parents:
    - class_name: "infraHPathS"
      target_classes:
        - "fabricPathEp"
  targets:
    - class_name: "fabricPathEp"
      target_dn: "topology/pod-1/paths-101/pathep-[eth1/1]"
      relation_resource_name: "host_path"
      static: true
    
infraRsPathToAccBaseGrp:
  parents:
    - class_name: "infraHPathS"
      target_classes:
        - "infraAccPortGrp"
  targets:
    - class_name: "infraAccPortGrp"
      target_dn: "uni/infra/funcprof/accportgrp-access_interface_policy_group"
      relation_resource_name: "access_interface_policy_group"
      static: true

