// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceL3extConsLblWithL3extOut(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t, "apic", "2.0(1m)-") },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOutAllowExisting,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "tag", "yellow-green"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "tag", "yellow-green"),
				),
			},
		},
	})

	setEnvVariable(t, "ACI_ALLOW_EXISTING_ON_CREATE", "false")
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t, "apic", "2.0(1m)-") },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:      testConfigL3extConsLblMinDependencyWithL3extOutAllowExisting,
				ExpectError: regexp.MustCompile("Object Already Exists"),
			},
		},
	})

	setEnvVariable(t, "ACI_ALLOW_EXISTING_ON_CREATE", "true")
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t, "apic", "2.0(1m)-") },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOutAllowExisting,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test", "tag", "yellow-green"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.allow_test_2", "tag", "yellow-green"),
				),
			},
		},
	})

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t, "apic", "2.0(1m)-") },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigL3extConsLblAllDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", "description_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", "name_alias_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", "owner_key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", "owner_tag_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "lemon-chiffon"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_name"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigL3extConsLblResetDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
				),
			},
			// Import testing
			{
				ResourceName:      "aci_l3out_consumer_label.test",
				ImportState:       true,
				ImportStateVerify: true,
			},
			// Update with children
			{
				Config:             testConfigL3extConsLblChildrenDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_name"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotation", "annotation_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.target_dn", "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.target_dn", "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotation", "annotation_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.direction", "export"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.target_dn", "uni/tn-test_tenant/prof-rt_ctrl_profile_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.direction", "import"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.target_dn", "uni/tn-test_tenant/prof-rt_ctrl_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.1.value", "test_value"),
				),
			},
			// Refresh State before import testing to ensure that the state is up to date
			{
				RefreshState:       true,
				ExpectNonEmptyPlan: false,
			},
			// Import testing with children
			{
				ResourceName:      "aci_l3out_consumer_label.test",
				ImportState:       true,
				ImportStateVerify: true,
			},
			// Update with children removed from config
			{
				Config:             testConfigL3extConsLblChildrenRemoveFromConfigDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotation", "annotation_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.target_dn", "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.1.target_dn", "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotation", "annotation_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.direction", "export"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.target_dn", "uni/tn-test_tenant/prof-rt_ctrl_profile_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.direction", "import"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.1.target_dn", "uni/tn-test_tenant/prof-rt_ctrl_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.#", "2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "2"),
				),
			},
			// Update with children first child removed
			{
				Config:             testConfigL3extConsLblChildrenRemoveOneDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.annotations.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.tags.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.0.target_dn", "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotation", "annotation_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.annotations.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.tags.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.direction", "import"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.0.target_dn", "uni/tn-test_tenant/prof-rt_ctrl_profile_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.#", "1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "1"),
				),
			},
			// Update with all children removed
			{
				Config:             testConfigL3extConsLblChildrenRemoveAllDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.#", "0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_external_epgs.#", "0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "relation_to_route_control_profiles.#", "0"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tags.#", "0"),
				),
			},
		},
		CheckDestroy: testCheckResourceDestroy,
	})
}

const testChildDependencyConfigL3extConsLbl = `
`

const testConfigL3extConsLblMinDependencyWithL3extOutAllowExisting = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "allow_test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
}
resource "aci_l3out_consumer_label" "allow_test_2" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  depends_on = [aci_l3out_consumer_label.allow_test]
}
`

const testConfigL3extConsLblMinDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
}
`

const testConfigL3extConsLblAllDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  annotation = "annotation"
  description = "description_1"
  name_alias = "name_alias_1"
  owner = "infra"
  owner_key = "owner_key_1"
  owner_tag = "owner_tag_1"
  tag = "lemon-chiffon"
}
`

const testConfigL3extConsLblResetDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  annotation = "orchestrator:terraform"
  description = ""
  name_alias = ""
  owner = "infra"
  owner_key = ""
  owner_tag = ""
  tag = "yellow-green"
}
`
const testConfigL3extConsLblChildrenDependencyWithL3extOut = testChildDependencyConfigL3extConsLbl + testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  annotations = [
    {
      key = "key_0"
      value = "value_1"
    },
    {
      key = "key_1"
      value = "test_value"
    },
  ]
  relation_to_external_epgs = [
    {
      annotation = "annotation_1"
      annotations = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      target_dn = "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_1"
    },
    {
      annotation = "annotation_2"
      annotations = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      target_dn = "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_2"
    },
  ]
  relation_to_route_control_profiles = [
    {
      annotation = "annotation_1"
      annotations = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      direction = "export"
      target_dn = "uni/tn-test_tenant/prof-rt_ctrl_profile_1"
    },
    {
      annotation = "annotation_2"
      annotations = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [
	    {
          key = "key_0"
          value = "value_1"
	    },
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      direction = "import"
      target_dn = "uni/tn-test_tenant/prof-rt_ctrl_profile_2"
    },
  ]
  tags = [
    {
      key = "key_0"
      value = "value_1"
    },
    {
      key = "key_1"
      value = "test_value"
    },
  ]
}
`

const testConfigL3extConsLblChildrenRemoveFromConfigDependencyWithL3extOut = testChildDependencyConfigL3extConsLbl + testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
}
`

const testConfigL3extConsLblChildrenRemoveOneDependencyWithL3extOut = testChildDependencyConfigL3extConsLbl + testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  annotations = [ 
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
  relation_to_external_epgs = [ 
	{
	  annotation = "annotation_2"
      annotations = [ 
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [ 
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
	  target_dn = "uni/tn-test_tenant/out-test_l3_outside/instP-inst_profile_2"
	},
  ]
  relation_to_route_control_profiles = [ 
	{
	  annotation = "annotation_2"
      annotations = [ 
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
      tags = [ 
	    {
          key = "key_1"
          value = "test_value"
	    },
      ]
	  direction = "import"
	  target_dn = "uni/tn-test_tenant/prof-rt_ctrl_profile_2"
	},
  ]
  tags = [ 
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
}
`

const testConfigL3extConsLblChildrenRemoveAllDependencyWithL3extOut = testChildDependencyConfigL3extConsLbl + testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_name"
  annotations = []
  relation_to_external_epgs = []
  relation_to_route_control_profiles = []
  tags = []
}
`
