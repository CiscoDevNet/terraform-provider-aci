// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceL3extConsLblWithL3extOut(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_l3out_consumer_label"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigL3extConsLblAllDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_l3out_consumer_label"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "test_annotation"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", "test_description"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", "test_name_alias"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "tenant"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", "test_owner_key"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", "test_owner_tag"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "burlywood"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigL3extConsLblMinDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_l3out_consumer_label"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", "test_description"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", "test_name_alias"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "tenant"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", "test_owner_key"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", "test_owner_tag"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "burlywood"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigL3extConsLblResetDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_l3out_consumer_label"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
				),
			},
			// Update with children
			{
				Config:             testConfigL3extConsLblChildrenDependencyWithL3extOut,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name", "test_l3out_consumer_label"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner", "infra"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "tag", "yellow-green"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.key", "test_key_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.0.value", "test_value_1"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.key", "test_key_2"),
					resource.TestCheckResourceAttr("aci_l3out_consumer_label.test", "annotations.1.value", "test_value_2"),
				),
			},
		},
	})
}

const testConfigL3extConsLblMinDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_l3out_consumer_label"
}
`

const testConfigL3extConsLblAllDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_l3out_consumer_label"
  annotation = "test_annotation"
  description = "test_description"
  name_alias = "test_name_alias"
  owner = "tenant"
  owner_key = "test_owner_key"
  owner_tag = "test_owner_tag"
  tag = "burlywood"
}
`

const testConfigL3extConsLblResetDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_l3out_consumer_label"
  annotation = "orchestrator:terraform"
  description = ""
  name_alias = ""
  owner = "infra"
  owner_key = ""
  owner_tag = ""
  tag = "yellow-green"
}
`
const testConfigL3extConsLblChildrenDependencyWithL3extOut = testConfigL3extOutMin + `
resource "aci_l3out_consumer_label" "test" {
  parent_dn = aci_l3_outside.test.id
  name = "test_l3out_consumer_label"
  annotations = [
	{
	  key = "test_key_1"
	  value = "test_value_1"
	},
	{
	  key = "test_key_2"
	  value = "test_value_2"
	},
  ]
}
`
