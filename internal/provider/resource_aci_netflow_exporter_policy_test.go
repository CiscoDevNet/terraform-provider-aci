// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceNetflowExporterPolWithFvTenant(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigNetflowExporterPolMinDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "CS2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigNetflowExporterPolAllDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", "description"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "AF11"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "12.12.12.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "ssh"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", "name_alias"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", "owner_key"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", "owner_tag"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "11.11.11.1/11"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigNetflowExporterPolMinDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigNetflowExporterPolResetDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "CS2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
				),
			},
			// Import testing
			{
				ResourceName:      "aci_netflow_exporter_policy.test",
				ImportState:       true,
				ImportStateVerify: true,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "CS2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
				),
			},
			// Update with children
			{
				Config:             testConfigNetflowExporterPolChildrenDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "CS2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.value", "value_2"),
				),
			},
			// Import testing with children
			{
				ResourceName:      "aci_netflow_exporter_policy.test",
				ImportState:       true,
				ImportStateVerify: true,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_addr", "2.2.2.1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dst_port", "https"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name", "netfow_exporter"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "src_addr", "1.1.1.1/10"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "description", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "dscp", "CS2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "source_ip_type", "custom-src-ip"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "ver", "v9"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.value", "value_2"),
				),
			},
			// Update with children removed from config
			{
				Config:             testConfigNetflowExporterPolChildrenRemoveFromConfigDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.1.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.1.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.#", "2"),
				),
			},
			// Update with children first child removed
			{
				Config:             testConfigNetflowExporterPolChildrenRemoveOneDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.0.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.#", "1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.0.value", "value_2"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.#", "1"),
				),
			},
			// Update with all children removed
			{
				Config:             testConfigNetflowExporterPolChildrenRemoveAllDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "annotations.#", "0"),
					resource.TestCheckResourceAttr("aci_netflow_exporter_policy.test", "tags.#", "0"),
				),
			},
		},
	})
}

const testConfigNetflowExporterPolMinDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name = "netfow_exporter"
  src_addr = "1.1.1.1/10"
}
`

const testConfigNetflowExporterPolAllDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  name = "netfow_exporter"
  annotation = "annotation"
  description = "description"
  dscp = "AF11"
  dst_addr = "12.12.12.1"
  dst_port = "ssh"
  name_alias = "name_alias"
  owner_key = "owner_key"
  owner_tag = "owner_tag"
  source_ip_type = "custom-src-ip"
  src_addr = "11.11.11.1/11"
  ver = "v9"
}
`

const testConfigNetflowExporterPolResetDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  name = "netfow_exporter"
  annotation = "orchestrator:terraform"
  description = ""
  dscp = "CS2"
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name_alias = ""
  owner_key = ""
  owner_tag = ""
  source_ip_type = "custom-src-ip"
  src_addr = "1.1.1.1/10"
  ver = "v9"
}
`
const testConfigNetflowExporterPolChildrenDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name = "netfow_exporter"
  src_addr = "1.1.1.1/10"
  annotations = [
	{
	  key = "key_0"
	  value = "value_1"
	},
	{
	  key = "key_1"
	  value = "value_2"
	},
  ]
  tags = [
	{
	  key = "key_0"
	  value = "value_1"
	},
	{
	  key = "key_1"
	  value = "value_2"
	},
  ]
}
`

const testConfigNetflowExporterPolChildrenRemoveFromConfigDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name = "netfow_exporter"
  src_addr = "1.1.1.1/10"
}
`

const testConfigNetflowExporterPolChildrenRemoveOneDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name = "netfow_exporter"
  src_addr = "1.1.1.1/10"
  annotations = [ 
	{
	  key = "key_1"
	  value = "value_2"
	},
  ]
  tags = [ 
	{
	  key = "key_1"
	  value = "value_2"
	},
  ]
}
`

const testConfigNetflowExporterPolChildrenRemoveAllDependencyWithFvTenant = testConfigFvTenantMin + `
resource "aci_netflow_exporter_policy" "test" {
  parent_dn = aci_tenant.test.id
  dst_addr = "2.2.2.1"
  dst_port = "https"
  name = "netfow_exporter"
  src_addr = "1.1.1.1/10"
  annotations = []
  tags = []
}
`
