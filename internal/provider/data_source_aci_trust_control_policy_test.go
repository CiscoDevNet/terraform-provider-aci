// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceFhsTrustCtrlPolWithFvTenant(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:             testConfigFhsTrustCtrlPolDataSourceDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "name", "test_name"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "description", ""),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "has_dhcpv4_server", "no"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "has_dhcpv6_server", "no"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "has_ipv6_router", "no"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "owner_tag", ""),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "trust_arp", "no"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "trust_nd", "no"),
					resource.TestCheckResourceAttr("data.aci_trust_control_policy.test", "trust_ra", "no"),
				),
			},
			{
				Config:      testConfigFhsTrustCtrlPolNotExistingFvTenant,
				ExpectError: regexp.MustCompile("Failed to read aci_trust_control_policy data source"),
			},
		},
	})
}

const testConfigFhsTrustCtrlPolDataSourceDependencyWithFvTenant = testConfigFhsTrustCtrlPolMinDependencyWithFvTenant + `
data "aci_trust_control_policy" "test" {
  parent_dn = aci_tenant.test.id
  name = "test_name"
  depends_on = [aci_trust_control_policy.test]
}
`

const testConfigFhsTrustCtrlPolNotExistingFvTenant = testConfigFhsTrustCtrlPolMinDependencyWithFvTenant + `
data "aci_trust_control_policy" "test_non_existing" {
  parent_dn = aci_tenant.test.id
  name = "non_existing_name"
  depends_on = [aci_trust_control_policy.test]
}
`
