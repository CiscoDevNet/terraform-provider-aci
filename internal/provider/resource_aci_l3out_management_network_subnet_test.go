// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceMgmtSubnetWithMgmtInstP(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigMgmtSubnetMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "ip", "1.1.1.0/24"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name", ""),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name_alias", ""),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigMgmtSubnetAllDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "ip", "1.1.1.0/24"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "description", "description"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name", "name"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name_alias", "name_alias"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigMgmtSubnetMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "ip", "1.1.1.0/24"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigMgmtSubnetResetDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "ip", "1.1.1.0/24"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "description", ""),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name", ""),
					resource.TestCheckResourceAttr("aci_l3out_management_network_subnet.test", "name_alias", ""),
				),
			},
		},
	})
}

const testConfigMgmtSubnetMinDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_subnet" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  ip = "1.1.1.0/24"
}
`

const testConfigMgmtSubnetAllDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_subnet" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  ip = "1.1.1.0/24"
  annotation = "annotation"
  description = "description"
  name = "name"
  name_alias = "name_alias"
}
`

const testConfigMgmtSubnetResetDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_subnet" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  ip = "1.1.1.0/24"
  annotation = "orchestrator:terraform"
  description = ""
  name = ""
  name_alias = ""
}
`
