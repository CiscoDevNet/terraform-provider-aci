// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceMgmtSubnetWithMgmtInstP(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:             testConfigMgmtSubnetDataSourceDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_l3out_management_network_subnet.test", "ip", "1.1.1.0/24"),
					resource.TestCheckResourceAttr("data.aci_l3out_management_network_subnet.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("data.aci_l3out_management_network_subnet.test", "description", ""),
					resource.TestCheckResourceAttr("data.aci_l3out_management_network_subnet.test", "name", ""),
					resource.TestCheckResourceAttr("data.aci_l3out_management_network_subnet.test", "name_alias", ""),
				),
			},
			{
				Config:      testConfigMgmtSubnetNotExisting,
				ExpectError: regexp.MustCompile("Failed to read aci_l3out_management_network_subnet data source"),
			},
		},
	})
}

const testConfigMgmtSubnetDataSourceDependencyWithMgmtInstP = testConfigMgmtSubnetMinDependencyWithMgmtInstP + `
data "aci_l3out_management_network_subnet" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  ip = "1.1.1.0/24"
  depends_on = [aci_l3out_management_network_subnet.test]
}
`

const testConfigMgmtSubnetNotExisting = testConfigMgmtSubnetMinDependencyWithMgmtInstP + `
data "aci_l3out_management_network_subnet" "test_non_existing" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  ip = "2.2.2.0/24"
  depends_on = [aci_l3out_management_network_subnet.test]
}
`
