// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceFvRsIntraEpgWithFvAEPg(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:             testConfigFvRsIntraEpgDataSourceDependencyWithFvAEPg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_relation_to_intra_epg_contract.test", "contract_name", "test_tn_vz_br_cp_name"),
					resource.TestCheckResourceAttr("data.aci_relation_to_intra_epg_contract.test", "annotation", "orchestrator:terraform"),
				),
			},
			{
				Config:      testConfigFvRsIntraEpgNotExistingFvAEPg,
				ExpectError: regexp.MustCompile("Failed to read aci_relation_to_intra_epg_contract data source"),
			},
		},
	})
}
func TestAccDataSourceFvRsIntraEpgWithFvESg(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:             testConfigFvRsIntraEpgDataSourceDependencyWithFvESg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_relation_to_intra_epg_contract.test", "contract_name", "test_tn_vz_br_cp_name"),
					resource.TestCheckResourceAttr("data.aci_relation_to_intra_epg_contract.test", "annotation", "orchestrator:terraform"),
				),
			},
			{
				Config:      testConfigFvRsIntraEpgNotExistingFvESg,
				ExpectError: regexp.MustCompile("Failed to read aci_relation_to_intra_epg_contract data source"),
			},
		},
	})
}

const testConfigFvRsIntraEpgDataSourceDependencyWithFvAEPg = testConfigFvRsIntraEpgMinDependencyWithFvAEPg + `
data "aci_relation_to_intra_epg_contract" "test" {
  parent_dn = aci_application_epg.test.id
  contract_name = "test_tn_vz_br_cp_name"
  depends_on = [aci_relation_to_intra_epg_contract.test]
}
`

const testConfigFvRsIntraEpgNotExistingFvAEPg = testConfigFvRsIntraEpgMinDependencyWithFvAEPg + `
data "aci_relation_to_intra_epg_contract" "test_non_existing" {
  parent_dn = aci_application_epg.test.id
  contract_name = "non_existing_tn_vz_br_cp_name"
  depends_on = [aci_relation_to_intra_epg_contract.test]
}
`
const testConfigFvRsIntraEpgDataSourceDependencyWithFvESg = testConfigFvRsIntraEpgMinDependencyWithFvESg + `
data "aci_relation_to_intra_epg_contract" "test" {
  parent_dn = aci_endpoint_security_group.test.id
  contract_name = "test_tn_vz_br_cp_name"
  depends_on = [aci_relation_to_intra_epg_contract.test]
}
`

const testConfigFvRsIntraEpgNotExistingFvESg = testConfigFvRsIntraEpgMinDependencyWithFvESg + `
data "aci_relation_to_intra_epg_contract" "test_non_existing" {
  parent_dn = aci_endpoint_security_group.test.id
  contract_name = "non_existing_tn_vz_br_cp_name"
  depends_on = [aci_relation_to_intra_epg_contract.test]
}
`
