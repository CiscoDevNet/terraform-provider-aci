// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceQosCustomPolWithFvTenant(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config:             testConfigQosCustomPolDataSourceDependencyWithFvTenant,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "name", "test_name"),
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "description", ""),
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "name_alias", ""),
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "owner_key", ""),
					resource.TestCheckResourceAttr("data.aci_custom_qos_policy.test", "owner_tag", ""),
				),
			},
			{
				Config:      testConfigQosCustomPolNotExistingFvTenant,
				ExpectError: regexp.MustCompile("Failed to read aci_custom_qos_policy data source"),
			},
		},
	})
}

const testConfigQosCustomPolDataSourceDependencyWithFvTenant = testConfigQosCustomPolMinDependencyWithFvTenant + `
data "aci_custom_qos_policy" "test" {
  parent_dn = aci_tenant.test.id
  name = "test_name"
  depends_on = [aci_custom_qos_policy.test]
}
`

const testConfigQosCustomPolNotExistingFvTenant = testConfigQosCustomPolMinDependencyWithFvTenant + `
data "aci_custom_qos_policy" "test_non_existing" {
  parent_dn = aci_tenant.test.id
  name = "non_existing_name"
  depends_on = [aci_custom_qos_policy.test]
}
`
