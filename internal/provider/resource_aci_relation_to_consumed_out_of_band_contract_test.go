// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceMgmtRsOoBConsWithMgmtInstP(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstPAllowExisting,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "priority", "unspecified"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "priority", "unspecified"),
				),
			},
		},
	})

	setEnvVariable(t, "ACI_ALLOW_EXISTING_ON_CREATE", "false")
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:      testConfigMgmtRsOoBConsMinDependencyWithMgmtInstPAllowExisting,
				ExpectError: regexp.MustCompile("Object Already Exists"),
			},
		},
	})

	setEnvVariable(t, "ACI_ALLOW_EXISTING_ON_CREATE", "true")
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstPAllowExisting,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test", "priority", "unspecified"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.allow_test_2", "priority", "unspecified"),
				),
			},
		},
	})

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "priority", "unspecified"),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsAllDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "priority", "level1"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigMgmtRsOoBConsResetDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "priority", "unspecified"),
				),
			},
			// Import testing
			{
				ResourceName:      "aci_relation_to_consumed_out_of_band_contract.test",
				ImportState:       true,
				ImportStateVerify: true,
			},
			// Update with children
			{
				Config:             testConfigMgmtRsOoBConsChildrenDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "priority", "unspecified"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.1.value", "test_value"),
				),
			},
			// Refresh State before import testing to ensure that the state is up to date
			{
				RefreshState:       true,
				ExpectNonEmptyPlan: false,
			},
			// Import testing with children
			{
				ResourceName:      "aci_relation_to_consumed_out_of_band_contract.test",
				ImportState:       true,
				ImportStateVerify: true,
			},
			// Update with children removed from config
			{
				Config:             testConfigMgmtRsOoBConsChildrenRemoveFromConfigDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.#", "2"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.key", "key_0"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.value", "value_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.1.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.1.value", "test_value"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.#", "2"),
				),
			},
			// Update with children first child removed
			{
				Config:             testConfigMgmtRsOoBConsChildrenRemoveOneDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.#", "1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.key", "key_1"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.0.value", "test_value"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.#", "1"),
				),
			},
			// Update with all children removed
			{
				Config:             testConfigMgmtRsOoBConsChildrenRemoveAllDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "annotations.#", "0"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "tags.#", "0"),
				),
			},
			// Update with minimum config and customtype semantic equivalent values
			{
				Config:             testConfigMgmtRsOoBConsCustomTypeDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "out_of_band_contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_relation_to_consumed_out_of_band_contract.test", "priority", "1"),
				),
			},
		},
	})
}

const testConfigMgmtRsOoBConsMinDependencyWithMgmtInstPAllowExisting = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "allow_test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
}
resource "aci_relation_to_consumed_out_of_band_contract" "allow_test_2" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  depends_on = [aci_relation_to_consumed_out_of_band_contract.allow_test]
}
`

const testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
}
`

const testConfigMgmtRsOoBConsAllDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  annotation = "annotation"
  priority = "level1"
}
`

const testConfigMgmtRsOoBConsResetDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  annotation = "orchestrator:terraform"
  priority = "unspecified"
}
`
const testConfigMgmtRsOoBConsChildrenDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  annotations = [
	{
	  key = "key_0"
	  value = "value_1"
	},
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
  tags = [
	{
	  key = "key_0"
	  value = "value_1"
	},
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
}
`

const testConfigMgmtRsOoBConsChildrenRemoveFromConfigDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
}
`

const testConfigMgmtRsOoBConsChildrenRemoveOneDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  annotations = [ 
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
  tags = [ 
	{
	  key = "key_1"
	  value = "test_value"
	},
  ]
}
`

const testConfigMgmtRsOoBConsChildrenRemoveAllDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  annotations = []
  tags = []
}
`

const testConfigMgmtRsOoBConsCustomTypeDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_relation_to_consumed_out_of_band_contract" "test" {
  parent_dn = aci_external_management_network_instance_profile.test.id
  out_of_band_contract_name = "test_tn_vz_oob_br_cp_name"
  priority = "1"
}
`
