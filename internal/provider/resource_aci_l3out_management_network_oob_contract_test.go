// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceMgmtRsOoBConsWithMgmtInstP(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "priority", "unspecified"),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigMgmtRsOoBConsAllDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "priority", "level1"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "contract_name", "test_tn_vz_oob_br_cp_name"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigMgmtRsOoBConsResetDependencyWithMgmtInstP,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "contract_name", "test_tn_vz_oob_br_cp_name"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "annotation", "orchestrator:terraform"),
					resource.TestCheckResourceAttr("aci_l3out_management_network_oob_contract.test", "priority", "unspecified"),
				),
			},
		},
	})
}

const testConfigMgmtRsOoBConsMinDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_oob_contract" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  contract_name = "test_tn_vz_oob_br_cp_name"
}
`

const testConfigMgmtRsOoBConsAllDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_oob_contract" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  contract_name = "test_tn_vz_oob_br_cp_name"
  annotation = "annotation"
  priority = "level1"
}
`

const testConfigMgmtRsOoBConsResetDependencyWithMgmtInstP = testConfigMgmtInstPMin + `
resource "aci_l3out_management_network_oob_contract" "test" {
  parent_dn = aci_l3out_management_network_instance_profile.test.id
  contract_name = "test_tn_vz_oob_br_cp_name"
  annotation = "orchestrator:terraform"
  priority = "unspecified"
}
`
