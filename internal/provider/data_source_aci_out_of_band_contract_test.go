// Code generated by "gen/generator.go"; DO NOT EDIT.
// In order to regenerate this file execute `go generate` from the repository root.
// More details can be found in the [README](https://github.com/CiscoDevNet/terraform-provider-aci/blob/master/README.md).

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceVzOOBBrCP(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testConfigVzOOBBrCPDataSource,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "annotation", "annotation"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "description", "description"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "intent", "estimate_add"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "name_alias", "name_alias"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "owner_key", "owner_key"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "owner_tag", "owner_tag"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "priority", "level1"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "scope", "application-profile"),
					resource.TestCheckResourceAttr("data.aci_out_of_band_contract.test", "target_dscp", "AF11"),
				),
			},
			{
				Config:      testConfigVzOOBBrCPNotExisting,
				ExpectError: regexp.MustCompile("Failed to read aci_out_of_band_contract data source"),
			},
		},
	})
}

const testConfigVzOOBBrCPDataSource = testConfigVzOOBBrCPAll + `
data "aci_out_of_band_contract" "test" {
  name = "test_name"
  depends_on = [aci_out_of_band_contract.test]
}
`

const testConfigVzOOBBrCPNotExisting = testConfigVzOOBBrCPAll + `
data "aci_out_of_band_contract" "test_non_existing" {
  name = "non_existing_name"
  depends_on = [aci_out_of_band_contract.test]
}
`
