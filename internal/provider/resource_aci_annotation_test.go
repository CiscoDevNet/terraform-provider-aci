// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccResourceTagAnnotationWithFvAEPg(t *testing.T) {

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create with minimum config and verify default APIC values
			{
				Config:             testConfigTagAnnotationMinDependencyWithFvAEPg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_annotation.test", "key", "test_annotation"),
					resource.TestCheckResourceAttr("aci_annotation.test", "value", ""),
				),
			},
			// Update with all config and verify default APIC values
			{
				Config:             testConfigTagAnnotationAllDependencyWithFvAEPg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_annotation.test", "key", "test_annotation"),
					resource.TestCheckResourceAttr("aci_annotation.test", "value", "test_value"),
				),
			},
			// Update with minimum config and verify config is unchanged
			{
				Config:             testConfigTagAnnotationMinDependencyWithFvAEPg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_annotation.test", "key", "test_annotation"),
					resource.TestCheckResourceAttr("aci_annotation.test", "value", "test_value"),
				),
			},
			// Update with empty strings config or default value
			{
				Config:             testConfigTagAnnotationResetDependencyWithFvAEPg,
				ExpectNonEmptyPlan: false,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("aci_annotation.test", "key", "test_annotation"),
				),
			},
		},
	})
}

const testConfigTagAnnotationMinDependencyWithFvAEPg = testConfigFvAEPgMin + `
resource "aci_annotation" "test" {
  parent_dn = aci_application_epg.test.id
  key = "test_annotation"
}
`

const testConfigTagAnnotationAllDependencyWithFvAEPg = testConfigFvAEPgMin + `
resource "aci_annotation" "test" {
  parent_dn = aci_application_epg.test.id
  key = "test_annotation"
  value = "test_value"
}
`

const testConfigTagAnnotationResetDependencyWithFvAEPg = testConfigFvAEPgMin + `
resource "aci_annotation" "test" {
  parent_dn = aci_application_epg.test.id
  key = "test_annotation"
}
`
